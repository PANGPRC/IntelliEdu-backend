name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-common:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 8 for build
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '8'

    - name: Initialize Maven Wrapper
      run: |
        mvn -N io.takari:maven:wrapper

    - name: Set execute permission for mvnw
      run: chmod +x ./mvnw

    - name: Build and install all modules
      run: ./mvnw clean install

  build-model-api:
    runs-on: ubuntu-latest
    needs: build-common
    strategy:
      matrix:
        service: [model, api]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 8 for build
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '8'
      
    - name: Initialize Maven Wrapper
      run: |
          mvn -N io.takari:maven:wrapper

    - name: Set execute permission for mvnw
      run: chmod +x ./mvnw

    - name: Build and install all modules
      run: ./mvnw clean install

  build-other-services:
    runs-on: ubuntu-latest
    needs: build-model-api
    strategy:
      matrix:
        service: [gateway, user-service, application-service, scoring-service, answer-record-service]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 8 for build
      uses: actions/setup-java@v3
      with:
        distribution: 'adopt'
        java-version: '8'

    - name: Set execute permission for mvnw
      run: chmod +x ./mvnw

    - name: Build, test and install all modules
      run: ./mvnw clean install test -X

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push IntelliEdu-${{ matrix.service }}
      uses: docker/build-push-action@v2
      with:
        context: .
        file: IntelliEdu-${{ matrix.service }}/Dockerfile.jdk8
        push: true
        tags: austinpang/intelliedu-${{ matrix.service }}:latest
