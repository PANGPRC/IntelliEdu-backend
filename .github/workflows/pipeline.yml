name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-common:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Initialize Maven Wrapper
      run: |
        mvn -N io.takari:maven:wrapper

    - name: Set execute permission for mvnw
      run: chmod +x ./mvnw

    - name: Build IntelliEdu-common
      run: ./mvnw clean install -f IntelliEdu-common/pom.xml

    - name: Print current directory
      run: pwd

    - name: List target/classes directory
      run: ls -la IntelliEdu-common/target/classes

    - name: Build and push IntelliEdu-common
      uses: docker/build-push-action@v2
      with:
        context: .
        file: IntelliEdu-common/Dockerfile.jdk8
        push: true
        tags: austinpang/intelliedu-common:latest

    - name: SonarQube Scan for IntelliEdu-common
      run: |
        ./mvnw sonar:sonar \
          -Dsonar.projectKey=intelliedu-common \
          -Dsonar.host.url=http://159.223.35.44:8888 \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.java.binaries=$(pwd)/IntelliEdu-common/target/classes \
          -f IntelliEdu-common/pom.xml

  build-model:
    runs-on: ubuntu-latest
    needs: build-common

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Initialize Maven Wrapper
      run: |
        mvn -N io.takari:maven:wrapper

    - name: Set execute permission for mvnw
      run: chmod +x ./mvnw

    - name: Build IntelliEdu-model
      run: ./mvnw clean install -f IntelliEdu-model/pom.xml

    - name: Print current directory
      run: pwd

    - name: List target/classes directory
      run: ls -la IntelliEdu-model/target/classes

    - name: Build and push IntelliEdu-model
      uses: docker/build-push-action@v2
      with:
        context: .
        file: IntelliEdu-model/Dockerfile.jdk8
        push: true
        tags: austinpang/intelliedu-model:latest

    - name: SonarQube Scan for IntelliEdu-model
      run: |
        ./mvnw sonar:sonar \
          -Dsonar.projectKey=intelliedu-model \
          -Dsonar.host.url=http://159.223.35.44:8888 \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.java.binaries=$(pwd)/IntelliEdu-model/target/classes \
          -f IntelliEdu-model/pom.xml

  build-api:
    runs-on: ubuntu-latest
    needs: build-model

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Initialize Maven Wrapper
      run: |
        mvn -N io.takari:maven:wrapper

    - name: Set execute permission for mvnw
      run: chmod +x ./mvnw

    - name: Build IntelliEdu-api
      run: ./mvnw clean install -f IntelliEdu-api/pom.xml

    - name: Print current directory
      run: pwd

    - name: List target/classes directory
      run: ls -la IntelliEdu-api/target/classes

    - name: Build and push IntelliEdu-api
      uses: docker/build-push-action@v2
      with:
        context: .
        file: IntelliEdu-api/Dockerfile.jdk8
        push: true
        tags: austinpang/intelliedu-api:latest

    - name: SonarQube Scan for IntelliEdu-api
      run: |
        ./mvnw sonar:sonar \
          -Dsonar.projectKey=intelliedu-api \
          -Dsonar.host.url=http://159.223.35.44:8888 \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.java.binaries=$(pwd)/IntelliEdu-api/target/classes \
          -f IntelliEdu-api/pom.xml

  build-other-services:
    runs-on: ubuntu-latest
    needs: build-api
    strategy:
      matrix:
        service: [gateway, user-service, application-service, scoring-service, answer-record-service]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Initialize Maven Wrapper
      run: |
        mvn -N io.takari:maven:wrapper

    - name: Set execute permission for mvnw
      run: chmod +x ./mvnw

    - name: Build and push IntelliEdu-${{ matrix.service }}
      uses: docker/build-push-action@v2
      with:
        context: .
        file: IntelliEdu-${{ matrix.service }}/Dockerfile.jdk8
        push: true
        tags: austinpang/intelliedu-${{ matrix.service }}:latest

  sonar-other-services:
    runs-on: ubuntu-latest
    needs: build-other-services
    strategy:
      matrix:
        service: [gateway, user-service, application-service, scoring-service, answer-record-service]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Initialize Maven Wrapper
      run: |
        mvn -N io.takari:maven:wrapper

    - name: Set execute permission for mvnw
      run: chmod +x ./mvnw

    - name: Print current directory
      run: pwd

    - name: SonarQube Scan for IntelliEdu-${{ matrix.service }}
      run: |
        ./mvnw clean compile sonar:sonar \
          -Dsonar.projectKey=intelliedu-${{ matrix.service }} \
          -Dsonar.host.url=http://159.223.35.44:8888 \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.java.binaries=$(pwd)/IntelliEdu-${{ matrix.service }}/target/classes \
          -f IntelliEdu-${{ matrix.service }}/pom.xml
